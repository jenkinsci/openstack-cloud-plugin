<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler"
         xmlns:l="/lib/layout" xmlns:dd="/lib/layout/dropdowns" xmlns:f="/lib/form">
    <!--
        Temporary workaround for https://issues.jenkins-ci.org/browse/JENKINS-37616
        Using Item.CONFIGURE as users authorized to do so can provision via job execution.
        Once the plugins starts to depend on core new enough, we can use Cloud.PROVISION again.
     -->
     <j:getStatic var="buildPermission" className="hudson.model.Item" field="CONFIGURE"/>
     <j:if test="${it.hasPermission(buildPermission) or it.hasPermission(it.PROVISION)}">

        <j:set var="formId" value="${h.generateId()}"/>

        <tr>
            <td/>
            <td colspan="${monitors.size()+2}" id="os-notifications">
                <l:overflowButton icon="symbol-add"
                                  text="${%Provision via} ${it.displayName}"
                                  tooltip="${null}"
                                  clazz="jenkins-!-margin-top-2">

                   <j:forEach var="t" items="${it.templates}">
                      <dd:custom>
                          <button class="jenkins-dropdown__item"
                                  data-type="os-provision"
                                  data-form="${formId}"
                                  data-cloud="${rootURL}/${it.url}provision"
                                  data-root="${rootURL}"
                                  data-url="${t.name}">${t.name}
                          </button>
                      </dd:custom>
                   </j:forEach>
               </l:overflowButton>
               <f:form action="${rootURL}/${it.url}provision" method="post" name="provision" id="${formId}">
                   <input name="template" type="hidden"/>
               </f:form>
               <st:adjunct includes="jenkins.plugins.openstack.compute.JCloudsCloud.provision"/>
            </td>
        </tr>
    </j:if>
</j:jelly>

